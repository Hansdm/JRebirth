<!DOCTYPE document [
  <!-- These are the entity sets for ISO Latin 1 characters for the XHTML -->
  <!ENTITY % HTMLlat1 PUBLIC "-//W3C//ENTITIES Latin 1 for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
  %HTMLlat1;
  <!-- These are the entity sets for special characters for the XHTML -->
  <!ENTITY % HTMLsymbol PUBLIC "-//W3C//ENTITIES Symbols for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
  %HTMLsymbol;
  <!-- These are the entity sets for symbol characters for the XHTML -->
  <!ENTITY % HTMLspecial PUBLIC "-//W3C//ENTITIES Special for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
  %HTMLspecial;
]>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>Define User Interface</title>
	</properties>

	<head>
		<title></title>
		<link rel="stylesheet" type="text/css" href="../css/shCoreEclipse.css" media="all" />
	</head>
	
	<body>

		<section name="UI Roles">

			<div id="catcherTitle">User Interface Layer</div>
			<div id="catcherContent">Use a custom MVC pattern with a lot of convenient tricks</div>

			<p>The User Interface layer is composed by three main components :</p>
			<ul>
				<li>Model</li>
				<li>View</li>
				<li>Controller</li>
			</ul>
			<p>Each of these must do predefined tasks to maintain a good Separation of Concerns (SoC).</p>
			<p>
				<span style="text-decoration: underline;">Short UML Diagram:</span>
			</p>
			<div style="text-align: center;">
				<img class="redux" src="uploads/images/uml/UI.png" alt="" />
			</div>

			<subsection name="Models">
				<p>Models are directly synchronized with the UIFacade and can send &amp; receive Waves, they can also use any other components.</p>
				<p>The goal of Models is to retrieve data from other layers, and to define Business Logic (business rules, authorizations ...).</p>
				<p>The Model automatically build its attached view.</p>

				<macro name="include">
					<param name="source" value="sample/src/main/java/org/jrebirth/sample/ui/SampleModel.java" />
					<param name="snippet" value="aj:SampleModel" />
				</macro>

			</subsection>


			<subsection name="InnerModels">

			</subsection>

			<subsection name="Views">

				<macro name="include">
					<param name="source" value="sample/src/main/java/org/jrebirth/sample/ui/SampleView.java" />
					<!-- <param name="snippet" value="aj:SampleView" /> -->
				</macro>

			</subsection>

			<subsection name="Controllers">

				<macro name="include">
					<param name="source" value="sample/src/main/java/org/jrebirth/sample/ui/SampleController.java" />
					<!-- <param name="snippet" value="aj:..SampleController" /> -->
				</macro>
			</subsection>

			<subsection name="Adapters &amp; Handlers"></subsection>


			<div class="bottomLinks">
				<div class="previousDocPage">
					<a href="Services.html">Services</a>
				</div>
				<div class="nextDocPage">
					<a href="Resources.html">Resources</a>
				</div>
				<div class="tocDocPage">
					<a href="Toc.html">TOC</a>
				</div>
			</div>

		</section>

	</body>
</document> 	