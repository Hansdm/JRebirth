<!DOCTYPE document [
  <!-- These are the entity sets for ISO Latin 1 characters for the XHTML -->
  <!ENTITY % HTMLlat1 PUBLIC "-//W3C//ENTITIES Latin 1 for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
  %HTMLlat1;
  <!-- These are the entity sets for special characters for the XHTML -->
  <!ENTITY % HTMLsymbol PUBLIC "-//W3C//ENTITIES Symbols for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
  %HTMLsymbol;
  <!-- These are the entity sets for symbol characters for the XHTML -->
  <!ENTITY % HTMLspecial PUBLIC "-//W3C//ENTITIES Special for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
  %HTMLspecial;
]>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>Configure Logging</title>
	</properties>

	<head>
		<title></title>
		<link rel="stylesheet" type="text/css" href="../css/shCoreEclipse.css" media="all" />
	</head>
	<body>

		<section name="Logging">

			<div id="catcherTitle">To log or not to log !</div>
			<div id="catcherContent">Logging is so important to diagnose UI bugs.</div>
			
			<p>My first idea about logging for JavaFX was to build myself a small
				lightweight and powerful module to add log capability to JRebirth
				Framework.
			</p>
			<p>But after some hundred of lines of code written, I realized that using
				a real logging library could be interesting and not too heavy to embed.
			</p>

			<subsection name="Logging Facade">
				<p>
					I choose to add dependency to slf4j-api :
					<a href="http://www.slf4j.org/">Simple
						Logging Facade 4 Java
					</a>
				</p>

				<p> This API is lightweight because the jar is near to 10 kb.</p>
				<macro name="include">
					<param name="source" value="../includes/Logging_Dependencies.xml" />
					<param name="snippet" value="xp:/dependencies/dependency[1]" />
					<param name="set-first-line" value="1"/>
				</macro>


			</subsection>

			<subsection name="NOP">

				<p>The slf4j api allow to declare logger for JRebirth Framework but
					doesn't provide any logger implementation.
				</p>
				<p>By default all logs are rejected and you will have this message into
					the Java console at startup:
				</p>
				<p style="color: red;">
					SLF4J: Failed to load class
					"org.slf4j.impl.StaticLoggerBinder".
					<br />
					SLF4J: Defaulting to no-operation (NOP) logger implementation
					<br />
					SLF4J: See
					<a target="_blank" href="http://www.slf4j.org/codes.html#StaticLoggerBinder">http://www.slf4j.org/codes.html#StaticLoggerBinder</a>
					for further details.
				</p>
				<p>
					To avoid this error message to appear you can add the No-OPeration
					dependency:
					<macro name="include">
						<param name="source" value="../includes/Logging_Dependencies.xml" />
						<param name="snippet" value="xp:/dependencies/dependency[2]" />
						<param name="set-first-line" value="1"/>
					</macro>
				</p>


			</subsection>

			<subsection name="LOGback">
				<p>Personally I choose LOGback implementation because it represents a good
					compromise between performances and customization. It was finely
					integrated because it was written by the same team as
					slf4j.
				</p>
				<p>
					LOGBack jars are quite heavy and weight more than 800 kb so it could be
					a problem for tiny applications.
					To use it you must add this dependency into your pom.xml :
					<macro name="include">
						<param name="source" value="../includes/Logging_Dependencies.xml" />
						<param name="snippet" value="xp:/dependencies/dependency[3]" />
						<param name="set-first-line" value="1"/>
					</macro>
				</p>

				<p>
					Then you must add a configuration file like this one into the
					application classpath:

					<macro name="include">
						<param name="source" value="../../../analyzer/src/main/resources/logback.xml" />
					</macro>
				</p>
			</subsection>

			<subsection name="SimpleLogger">
				<p>If you don't want to embed 800 kb of jar to provide logging feature you
					can use the simple logger provided by slf4j, it's only a 10 kb jar file.
				</p>
				<p>
					You just have to add this dependency to your pom.xml:
					<macro name="include">
						<param name="source" value="../includes/Logging_Dependencies.xml" />
						<param name="snippet" value="xp:/dependencies/dependency[4]" />
						<param name="set-first-line" value="1"/>
					</macro>
				</p>

			</subsection>

			<div class="bottomLinks">
				<div class="previousDocPage">
					<a href="Thread.html">Thread Management</a>
				</div>
				<div class="nextDocPage">
					<a href="Facades.html">How Facades work</a>
				</div>
				<div class="tocDocPage">
					<a href="index.html">TOC</a>
				</div>
			</div>

		</section>

	</body>
</document> 	
